"use strict";

var _cloudinary = _interopRequireDefault(require("cloudinary"));

var _dotenv = _interopRequireDefault(require("dotenv"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

_dotenv["default"].config();

_cloudinary["default"].config({
  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,
  api_key: process.env.CLOUDINARY_API_KEY,
  api_secret: process.env.CLOUDINARY_API_SECRET
});

var uploads = {};
console.log('** ** ** ** ** ** ** ** ** Uploads ** ** ** ** ** ** ** ** ** **');

function performTransformations() {
  console.log();
  console.log();
  console.log();
  console.log('>> >> >> >> >> >> >> >> >> >>  Transformations << << << << << << << << << <<');
  console.log();
  console.log('> Fit into 200x150');
  console.log("> ".concat(_cloudinary["default"].url(uploads.pizza2.public_id, {
    width: 200,
    height: 150,
    crop: 'fit',
    format: 'jpg'
  })));
  console.log();
  console.log('> Eager transformation of scaling to 200x150');
  console.log("> ".concat(_cloudinary["default"].url(uploads.lake.public_id, eager_options)));
  console.log();
  console.log('> Face detection based 200x150 thumbnail');
  console.log("> ".concat(_cloudinary["default"].url(uploads.couple.public_id, {
    width: 200,
    height: 150,
    crop: 'thumb',
    gravity: 'faces',
    format: 'jpg'
  })));
  console.log();
  console.log('> Fill 200x150, round corners, apply the sepia effect');
  console.log("> ".concat(_cloudinary["default"].url(uploads.couple2.public_id, {
    width: 200,
    height: 150,
    crop: 'fill',
    gravity: 'face',
    radius: 10,
    effect: 'sepia',
    format: 'jpg'
  })));
  console.log();
  console.log("> That's it. You can now open the URLs above in a browser");
  console.log('> and check out the generated images.');
} // Here, the transformation is applied to the uploaded image BEFORE storing it on the cloud.
// The original uploaded image is discarded.


function waitForAllUploads(id, err, image) {
  uploads[id] = image;
  var ids = Object.keys(uploads);

  if (ids.length == 6) {
    console.log();
    console.log("**  uploaded all files (".concat(ids.join(','), ") to cloudinary"));
    performTransformations();
  }

  _cloudinary["default"].uploader.upload('http://res.cloudinary.com/demo/image/upload/couple.jpg', {
    tags: 'basic_sample',
    width: 500,
    height: 500,
    crop: 'fit',
    effect: 'saturation:-70'
  }, function (err, image) {
    console.log();
    console.log('** Remote Url');

    if (err) {
      console.warn(err);
    }

    console.log("* ".concat(image.public_id));
    console.log("* ".concat(image.url));
    waitForAllUploads('couple2', err, image);
  }); // File upload


  _cloudinary["default"].uploader.upload('pizza.jpg', {
    tags: 'basic_sample'
  }, function (err, image) {
    console.log();
    console.log('** File Upload');

    if (err) {
      console.warn(err);
    }

    console.log("* public_id for the uploaded image is generated by Cloudinary's service.");
    console.log("* ".concat(image.public_id));
    console.log("* ".concat(image.url));
    waitForAllUploads('pizza', err, image);
  });
}